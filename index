
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Translator App</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://unpkg.com/vue@3"></script>
</head>
<body class="bg-gradient-to-r from-purple-600 to-blue-600   text-white font-sans min-h-screen flex flex-col justify-center items-center">
    <div id="app" class="container mx-auto p-8  bg-white rounded-lg shadow-lg mt-16  max-w-lg">
        <div class="card">
            <div class="card-header mt-8 bg-blue-100 text-gray-900 p-4 rounded-t-lg text-center">
                <h1 class="text-4xl mb-4  text-green-800  ">{{ title }}</h1>
            </div>
            <div class="card-body p-6">
                <div class="form-group mb-4">
                    <label for="textToTranslate" class="block text-lg font-bold text-green-900 mb-2">Text to Translate:</label>
                    <textarea id="textToTranslate" class="form-control w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" v-model="textToTranslate" rows="3"></textarea>
                </div>
                <div class="form-group mb-4">
                    <label for="language" class="block text-lg font-bold text-green-900 mb-2">Select Language:</label>
                    <select id="language" class="form-control w-full p-2 border border-gray-300 rounded-lg focus:outline-none  text-green-900  focus:ring-2 focus:ring-blue-500" v-model="selectedLanguage">
                        <option v-for="(language, code) in languages" :value="code">{{ language }}</option>
                    </select>
                </div>
                <button class="btn btn-primary w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg transition duration-300" @click="translateText">Translate</button>
                <div class="mt-6">
                    <h2 class="text-2xl mb-4 text-green-900">Translation:</h2>
                    <p class="text-gray-800">{{ translatedText }}</p>
                    <p v-if="pinyin" class="text-gray-800">Pinyin: {{ pinyin }}</p> <!-- Display Pinyin if Chinese is selected -->
                </div>
                <div v-if="error" class="mt-6">
                    <h2 class="text-2xl mb-4 text-red-900">Error:</h2>
                    <p class="text-gray-800">{{ error }}</p>
                </div>
            </div>
        </div>
    </div>
    <footer class="text-center mt-10 mb-8 text-white">
        <p>&copy; 2023 Translator App. All rights reserved.</p>
    </footer>

    <script>
        const app = Vue.createApp({
            data() {
                return {
                    title: 'Translator App',
                    textToTranslate: '',
                    selectedLanguage: 'zh',
 translatedText: '',
                    pinyin: '',
                    error: '', // Added error property
                    languages: {
                        'es': 'Spanish',
                        'fr': 'French',
                        'de': 'German',
                        'it': 'Italian',
                        'pt': 'Portuguese',
                        'zh': 'Chinese',
                        'ja': 'Japanese',
                        'ur': 'Urdu',
                        'ug': 'Uyghur' 
                    }
                }
            },
            methods: {
                async translateText() {
                    this.error = ''; // Reset error message
                    if (!this.textToTranslate) {
                        this.error = 'Please enter text to translate.';
                        return;
                    }
                    try {
                        const response = await fetch(`https://api.mymemory.translated.net/get?q=${this.textToTranslate}&langpair=en|${this.selectedLanguage}`);
                        if (!response.ok) throw new Error('Translation API error');
                        const data = await response.json();
                        this.translatedText = data.responseData.translatedText;
                        if (this.selectedLanguage === 'zh') {
                            const pinyinResponse = await fetch(`https://api.pinyinapi.com/get?q=${this.textToTranslate}`);
                            if (!pinyinResponse.ok) throw new Error('Pinyin API error');
                            const pinyinData = await pinyinResponse.json();
                            this.pinyin = pinyinData.pinyin;
                        } else {
                            this.pinyin = '';
                        }
                    } catch (error) {
                        this.error = error.message;
                    }
                }
            }
        });
        app.mount('#app');
    </script>
</body>
</html>
